--Finding Duplicate Values in SQL
--DROP TABLE CUSTOMER_RESTRICTED_INFO;

 create DATABASE TOURISM;

USE DATABASE TOURISM;

USE SCHEMA PUBLIC;

CREATE OR REPLACE TABLE CUSTOMER_RESTRICTED_INFO (
	C_CUSTKEY NUMBER(16,0),
	C_NAME VARCHAR(20),
	C_EDUCATION VARCHAR(10),
	C_DEPARTMENT VARCHAR(20)
);

--DROP TABLE CUSTOMER_RESTRICTED_INFO;
SELECT * FROM CUSTOMER_RESTRICTED_INFO;
TRUNCATE CUSTOMER_RESTRICTED_INFO;
--DML: Data Manipulation Language [INSERT, UPDATE, DELETE, ALTER]
--"INSERT" TO ADD NEW RECORDS
INSERT INTO CUSTOMER_RESTRICTED_INFO (C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT)
VALUES (1001, 'Sabbir Hossain', 'MSc', 'Statistics');--FOR DATE AND VARCHAR USE SINGLE QUOTE

SELECT * FROM CUSTOMER_RESTRICTED_INFO;

--Multiple Rows can be inserted at a time
INSERT INTO CUSTOMER_RESTRICTED_INFO (C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT)
VALUES 
    (1002, 'Pervej Hossain', 'BSc', 'Economics'),
    (1003, 'Emma Watson', 'MSc', null),
    (1004, 'Sukanta Pramannik', 'BSc', 'CSE'),
    (1001, 'Albi Hossain', 'MSc', 'Biostatistics');

--Checking if there is any duplicate record in the dataset and how many

SELECT * FROM CUSTOMER_RESTRICTED_INFO
WHERE C_CUSTKEY IN ('1001');

-- Is any primary (custkey) key duplicate  
    SELECT C_CUSTKEY
    FROM CUSTOMER_RESTRICTED_INFO
    GROUP BY C_CUSTKEY --WHY USE GROUPBY(WITHOUT USING AGR FUNCTION)
    HAVING COUNT(C_CUSTKEY) >1;
                    


SELECT * FROM CUSTOMER_RESTRICTED_INFO
WHERE  C_CUSTKEY IN (
   SELECT C_CUSTKEY
    FROM CUSTOMER_RESTRICTED_INFO
    GROUP BY C_CUSTKEY
    HAVING COUNT(C_CUSTKEY) >1
                    );

-- CHECK WHERE DUPLICATE RECORD EXIST BASED ON MULTIPLE COLUMN

SELECT C_CUSTKEY,C_NAME,C_EDUCATION,C_DEPARTMENT
FROM CUSTOMER_RESTRICTED_INFO
GROUP BY 1, 2, 3, 4
HAVING COUNT(*) >1;


SELECT * FROM CUSTOMER_RESTRICTED_INFO
WHERE (C_CUSTKEY,C_NAME,C_EDUCATION,C_DEPARTMENT) IN 
    (SELECT C_CUSTKEY,C_NAME,C_EDUCATION,C_DEPARTMENT
    FROM CUSTOMER_RESTRICTED_INFO
    GROUP BY C_CUSTKEY,C_NAME,C_EDUCATION,C_DEPARTMENT
    HAVING COUNT(*) >1);


--difference between where and having
--where filters on the raw data/table
--having filters on aggregated results

select c_custkey, count(c_custkey)
from customer_restricted_info
--WHERE C_EDUCATION = 'MSc'
group by c_custkey
HAVING count(c_custkey) >1;

SELE CT * FROM CUSTOMER_RESTRICTED_INFO;

--Showing all the details of the duplicate records
--Sub Query
SELECT * FROM CUSTOMER_RESTRICTED_INFO
    WHERE C_CUSTKEY IN ('1001');

SELECT * FROM CUSTOMER_RESTRICTED_INFO
    WHERE C_CUSTKEY IN (
        SELECT C_CUSTKEY
        FROM CUSTOMER_RESTRICTED_INFO 
        GROUP BY 1
        HAVING COUNT(C_CUSTKEY) >1
                        )
ORDER BY 1;


/*
DELETE FROM CUSTOMER_RESTRICTED_INFO
    WHERE C_CUSTKEY IN (
        SELECT C_CUSTKEY
        FROM CUSTOMER_RESTRICTED_INFO 
        GROUP BY 1
        HAVING COUNT(*) >1
        LIMIT 1)
LIMIT 1;
*/
--NOT APPLICATE ON SNOWFLAKE
--DELETE ALL RECORDE WHICH C_CUSTKEY IS DUPLICATE(NOT WHOLE RECORD)
DELETE FROM CUSTOMER_RESTRICTED_INFO
WHERE C_CUSTKEY = '1001';

SELECT * FROM CUSTOMER_RESTRICTED_INFO;

--DELETE ALL RECORDE WHERE C_CUSTKEY IS DUPLICATE 

DELETE FROM CUSTOMER_RESTRICTED_INFO
WHERE C_CUSTKEY IN 
                    (
                    SELECT C_CUSTKEY
        FROM CUSTOMER_RESTRICTED_INFO 
        GROUP BY 1
        HAVING COUNT(C_CUSTKEY) >1
                    );

--(Problem is above quiry delete all record where custkey = 1001)
--but I want to delete just duplicate record for all column 

SELECT * FROM CUSTOMER_RESTRICTED_INFO;



SELECT * FROM CUSTOMER_RESTRICTED_INFO
ORDER BY C_CUSTKEY;
TRUNCATE CUSTOMER_RESTRICTED_INFO;

--WINDOW FUNCTION(ROW NUMBER)
DELETE FROM (
    SELECT C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT,
           ROW_NUMBER() OVER (PARTITION BY C_CUSTKEY ORDER BY C_CUSTKEY) AS ROW_NUM
    FROM CUSTOMER_RESTRICTED_INFO
    )
WHERE ROW_NUM > 1;


/*
In Snowflake, you cannot directly delete from a subquery or a derived table using the DELETE statement. Instead, you can use a common table expression (CTE) with a MERGE statement to achieve the desired result. Here's an updated syntax for your scenario:
*/

DELETE FROM CUSTOMER_RESTRICTED_INFO
WHERE (C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT) IN 
    (
    SELECT C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT
    FROM (
        SELECT C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT,
               ROW_NUMBER() OVER (PARTITION BY C_CUSTKEY ORDER BY (SELECT 0)) AS ROW_NUM
        FROM CUSTOMER_RESTRICTED_INFO
        ) AS Subquery
    WHERE ROW_NUM > 1
    );


SELECT * FROM CUSTOMER_RESTRICTED_INFO;





SELECT C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT,
               ROW_NUMBER() OVER (PARTITION BY C_CUSTKEY ORDER BY C_CUSTKEY) AS ROW_NUM
FROM CUSTOMER_RESTRICTED_INFO;

DELETE FROM CUSTOMER_RESTRICTED_INFO
WHERE C_CUSTKEY IN 
(SELECT C_CUSTKEY
    FROM (
        SELECT C_CUSTKEY, C_NAME, C_EDUCATION, C_DEPARTMENT,
               ROW_NUMBER() OVER (PARTITION BY C_CUSTKEY ORDER BY (SELECT 0)) AS ROW_NUM
        FROM CUSTOMER_RESTRICTED_INFO
        ) AS Subquery
    WHERE ROW_NUM > 1);



