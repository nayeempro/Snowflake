SELECT * FROM ORDERS LIMIT 5; --CHEK_1800001

SELECT L_SHIPMODE AS SHIPMODE , SUM(L_EXTENDEDPRICE) AS PRICE
FROM LINEITEM
WHERE L_ORDERKEY = 1800001
GROUP BY L_SHIPMODE; --L_SHIPMODE ,L_EXTENDEDPRICE


--EXPLORING
SELECT * FROM PARTSUPP LIMIT 5;

SELECT * FROM SUPPLIER LIMIT 5;

SELECT * FROM PART LIMIT 10;--P_PARTKEY

SELECT DISTINCT P_TYPE FROM PART;

SELECT COUNT(DISTINCT P_TYPE) AS UNIQUE_PRODUCT_TYPE_COUNT FROM PART;


--FINDING TOP SELLING PRODUCT(BASED ON QUANTITY)

SELECT P.P_TYPE PRODUCT_TYPE, SUM(L.L_QUANTITY) AS TOTAL_QUANTITY_ITEM_SOLD
FROM LINEITEM AS L
LEFT JOIN PART AS P ON L.L_PARTKEY = P.P_PARTKEY --PART TABLE WHERE WE CAN FIND THE PRODUCT NAME
GROUP BY PRODUCT_TYPE
ORDER BY 2 DESC --ORDER BY QUANTITY
LIMIT 10;



--WHERE VS HAVING

SELECT P.P_TYPE PRODUCT_TYPE, SUM(L.L_QUANTITY) AS TOTAL_QUANTITY_ITEM_SOLD
FROM LINEITEM AS L
LEFT JOIN PART AS P ON L.L_PARTKEY = P.P_PARTKEY --PART TABLE WHERE WE CAN FIND PRODUCT NAME
WHERE YEAR(L_RECEIPTDATE)>1995         --(FILTER WHOLE DATA)
GROUP BY PRODUCT_TYPE
HAVING TOTAL_QUANTITY_ITEM_SOLD >=464118 
ORDER BY 2 DESC --ORDER BY QUANTITY
;



--(COMMON TABLE EXPRESSION(CTE) AND CASE_WHEN)

SELECT 
DAYNAME(O_ORDERDATE) AS DAYNAMES , ROUND(SUM(O_TOTALPRICE),0) AS DAY_WISE_TOTAL
FROM ORDERS
GROUP BY 1
ORDER BY 2 DESC
;--USE THE ABOVE QUIRY AS CTE


WITH CTE1 AS
(SELECT 
DAYNAME(O_ORDERDATE) AS DAYNAMES , ROUND(SUM(O_TOTALPRICE),0) AS DAY_WISE_TOTAL
FROM ORDERS
GROUP BY 1
ORDER BY 2 DESC
)
--NOTE:--> DON'T USE (;) AFTER CTE

--CASE WHEN
SELECT
CASE WHEN DAYNAMES IN ('Sat','Sun')  THEN 'WEEKEND' ELSE 'WEEKDAYS' END 
AS DAY_TYPES ,
SUM(DAY_WISE_TOTAL) AS TOTAL_SALES
FROM CTE1 
GROUP BY DAY_TYPES
ORDER BY 2 DESC;



--DO SAME QUIRY FOR 'ILIKE'


WITH CTE1 AS
(SELECT 
DAYNAME(O_ORDERDATE) AS DAYNAMES , ROUND(SUM(O_TOTALPRICE),0) AS DAY_WISE_TOTAL
FROM ORDERS
GROUP BY 1
ORDER BY 2 DESC
)

--CASE WHEN
SELECT
CASE WHEN DAYNAMES ILIKE'S%' THEN 'WEEKEND' ELSE 'WEEKDAYS' END 
AS DAY_TYPES ,
SUM(DAY_WISE_TOTAL) AS TOTAL_SALES
FROM CTE1 
GROUP BY DAY_TYPES
ORDER BY 2 DESC;








