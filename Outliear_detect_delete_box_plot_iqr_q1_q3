WITH CTE1 AS (
SELECT
DAYNAME(O_ORDERDATE) AS DAYNAMES,
ROUND(SUM(O_TOTALPRICE),0) AS O_TOTAL_PRICE
FROM ORDERS
GROUP BY 1
ORDER BY 2 DESC
)
SELECT 
CASE WHEN DAYNAMES ILIKE 'S%' THEN 'WEEKEND' ELSE 'WEEKDAY' END AS DAYS_TYPES,
SUM(O_TOTAL_PRICE) AS WEEKLY_SALES
FROM CTE1
GROUP BY 1
ORDER BY 2 DESC;


WITH cte1 AS
(SELECT dayname(O_ORDERDATE) AS DAYNAMES, ROUND(SUM(O_TOTALPRICE),0) AS DAYWISE_TOTAL_SALES
FROM ORDERS
GROUP BY 1
ORDER BY 2 DESC)

SELECT 
CASE WHEN DAYNAMES = 'Sat' THEN 'WEEKEND'
    WHEN DAYNAMES = 'Sun' THEN 'WEEKEND'
ELSE 'WEEKDAYS' END AS DAY_TYPE, 
SUM(DAYWISE_TOTAL_SALES) AS WEEKEND_WEEKDAY_SALES
FROM cte1
GROUP BY DAY_TYPE
ORDER BY 2 DESC;




--DATEPART 
SELECT DATE_PART(QUARTER, '2013-05-08'::DATE); --CASTING --> (::)
SELECT DATE_PART(YEAR, '2013-05-08'::DATE); --2013
SELECT DATE_PART(MONTH, '2013-05-08'::DATE); -- 5(MAY)
SELECT DATE_PART(DAY, '2013-05-08'::DATE); --8TH DAY 
SELECT DATE_PART(WEEKDAY, '2013-05-08'::DATE); --3 (1-SUN 2-MON 3- TUE)


--MOST RECENT dATE AND EARLIER DATE
SELECT 
MAX(O_ORDERDATE) AS MOST_RECENT_DATE,
MIN(O_ORDERDATE) AS MOST_EARLIEST_DATE
FROM ORDERS; --1998-08-02 AND  1992-01-01


--MOST RECENT YEAR AND EARLIER YEAR
SELECT 
DATE_PART(YEAR,MAX(O_ORDERDATE)) AS MOST_RECENT_YEAR,
DATE_PART(YEAR,MIN(O_ORDERDATE)) AS MOST_EARLIEST_YEAR
FROM ORDERS; --1992 -> 1998


--YEARLY SALES
SELECT 
DATE_PART(YEAR,O_ORDERDATE) AS YEARS,
DATE_PART(MONTH,O_ORDERDATE) AS MONTHS,
ROUND(SUM(O_TOTALPRICE),0)
FROM ORDERS
GROUP BY 1, 2
ORDER BY 1 DESC,2 ASC;

-- FIVE NUMBER SUMMAY OR BOX PLOT

SELECT 
MIN(O_TOTALPRICE) AS MIN_O_VALUE,
PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q1,
PERCENTILE_CONT(.50) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS MEDIAN,
PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q3,
MAX(O_TOTALPRICE) AS MAX_O_VALUE
FROM ORDERS;

--FINDING OUTLIERS USING FIVE NUMBER SUMMARY AND INTER-QUARTILE RANGES (IQR)

SELECT 
MIN(O_TOTALPRICE) AS MIN_O_VALUE,
PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q1,
PERCENTILE_CONT(.50) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS MEDIAN,
PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q3,
MAX(O_TOTALPRICE) AS MAX_O_VALUE,
(PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) - PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) ) AS IQR,
Q3-Q1 AS IQR2
FROM ORDERS;




--DETECT OUTLIERS

WITH BOX_PLOT AS(
SELECT 
MIN(O_TOTALPRICE) AS MIN_O_VALUE,
PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q1,
PERCENTILE_CONT(.50) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS MEDIAN,
PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q3,
MAX(O_TOTALPRICE) AS MAX_O_VALUE,
(PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) - PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) ) AS IQR,
Q3-Q1 AS IQR2
FROM ORDERS)

SELECT
ROUND((Q1-1.5*IQR),0) AS LOWER_HINGE,  --128223
ROUND((Q3+1.5*IQR),0) AS UPPER_HINGE,   --421367
FROM BOX_PLOT
;



--REMOVING OUTLIER

WITH BOX_PLOT AS(
SELECT 
MIN(O_TOTALPRICE) AS MIN_O_VALUE,
PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q1,
PERCENTILE_CONT(.50) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS MEDIAN,
PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) AS Q3,
MAX(O_TOTALPRICE) AS MAX_O_VALUE,
(PERCENTILE_CONT(.75) WITHIN GROUP(ORDER BY O_TOTALPRICE) - PERCENTILE_CONT(.25) WITHIN GROUP(ORDER BY O_TOTALPRICE) ) AS IQR,
Q3-Q1 AS IQR2
FROM ORDERS), -- MUST USE COMMA(,) FOR NEW CTE

HINGES AS 
(SELECT
ROUND((Q1-1.5*IQR),0) AS LOWER_HINGE,
ROUND((Q3+1.5*IQR),0) AS UPPER_HINGE,
FROM BOX_PLOT)

SELECT * FROM ORDERS
WHERE
O_TOTALPRICE > (SELECT LOWER_HINGE FROM HINGES) AND 
O_TOTALPRICE < (SELECT UPPER_HINGE FROM HINGES) 
;



--CHECK IS THERE EXIST ANY OUTLIEAR
-- LOWER_HINGE,  --128223
-- UPPER_HINGE,   --421367

